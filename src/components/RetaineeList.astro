<p class="instructions" id="retainees-list"></p>

<script>
    import { retainees } from "../stores/contractStore";
    import retainer from "../contracts/retainer";
    import { urlForAccountAddress } from "../contracts/util";

    let retaineesList = document.getElementById(
        "retainees-list",
    ) as HTMLDivElement;

    const createRow = async (r: string) => {
        let name = "";
        try {
            let { result } = await retainer.retainee_info({
                retainee: r,
            });
            name = result.name;
            console.log(result);
        } catch (e) {
            console.log(`Unable to find retainee info for ${r}`);
        }
        return `<tr>
                    <td>${name}</td>
                    <td><a href="${urlForAccountAddress(r)}">${r.substring(0, 8)}...</a></td>
                    <td><a href="/retainee/${r}">Manage</a></td>
                </tr>`;
    };
    retainees.subscribe(async (value) => {
        let promises = value.map(async (r) => await createRow(r));
        let results = await Promise.all(promises);
        retaineesList.innerHTML = `<strong>My Retainees</strong><br/><table>
            <thead><tr>
                <th>Name</th>
                <th>Address</th>
                <td>Manage</td>                
            <tr/></thead>
            <tbody>
                ${results.join("")}
            </tbody>
        </table>`;
    });
</script>


<style>
    main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.instructions button {
		display: inline-block;
		width: 40%;
		margin-left: 4%;
		margin-right: 4%;
		place-items: center;
		justify-items: center;
		align-items: center;
	}
</style>